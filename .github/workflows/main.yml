# This is a basic workflow to help you get started with Actions

name: Update from GISAID

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 5 * * *'

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  download-and-aggregate:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }} 
      - name: Install pandas
        run: pip install pandas tqdm
      - name: Download file
        run: curl -u ${{secrets.GISAID_USERNAME}}:${{secrets.GISAID_PW}} https://www.epicov.org/epi3/3p/varsurv02/export/provision.json.xz | xz -d -T0  > ./provision.json
        working-directory: ./data_processing/
      - name: Aggregate
        run: python process_gisaid.py
        working-directory: ./data_processing/
      - name: Upload
        uses: actions/upload-artifact@v2
        with: 
          name: aggregated-csv
          path: ./data_processing/full_data_table.csv
  
  build-db-image:
    needs: download-and-aggregate
    runs-on: ubuntu-latest
    # https://event-driven.io/en/how_to_buid_and_push_docker_image_with_github_actions/
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: covince/covince-backend
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Download aggregated file
        uses: actions/download-artifact@v2
        with:
          name: aggregated-csv
          path: database/input.csv
      # https://github.com/docker/build-push-action/issues/37#issuecomment-720358308
      - name: Prepare image name
        run: |
          echo IMAGE_NAME=$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
      - name: Build image and push to GHCR
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./database
          push: true
          # Note: tags has to be all lower-case
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}/db:latest

  update-db:
    needs: build-db-image
    runs-on: ubuntu-latest
    steps:
      # https://blog.benoitblanchon.fr/github-action-run-ssh-commands/
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/db.key
          chmod 600 ~/.ssh/db.key
          cat >>~/.ssh/config <<END
          Host *
            IdentityFile ~/.ssh/db.key
            StrictHostKeyChecking no
          END
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
      - name: do remote update
        run: ssh ${{ secrets.SSH_TARGET }} -C './update.sh' 2>/dev/null
 
